// Code generated by goctl. DO NOT EDIT.
// Source: rolemanager.proto

package rolemanager

import (
	"context"

	"github.com/LINKHA/automatix/app/rolemanager/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	DeleteRoleReq    = pb.DeleteRoleReq
	DeleteRoleResp   = pb.DeleteRoleResp
	GetRoleReq       = pb.GetRoleReq
	GetRoleResp      = pb.GetRoleResp
	RegisterRoleReq  = pb.RegisterRoleReq
	RegisterRoleResp = pb.RegisterRoleResp
	SetRoleReq       = pb.SetRoleReq
	SetRoleResp      = pb.SetRoleResp

	Rolemanager interface {
		RegisterRole(ctx context.Context, opts ...grpc.CallOption) (pb.Rolemanager_RegisterRoleClient, error)
		SetRole(ctx context.Context, opts ...grpc.CallOption) (pb.Rolemanager_SetRoleClient, error)
		GetRole(ctx context.Context, opts ...grpc.CallOption) (pb.Rolemanager_GetRoleClient, error)
		DeleteRole(ctx context.Context, opts ...grpc.CallOption) (pb.Rolemanager_DeleteRoleClient, error)
	}

	defaultRolemanager struct {
		cli zrpc.Client
	}
)

func NewRolemanager(cli zrpc.Client) Rolemanager {
	return &defaultRolemanager{
		cli: cli,
	}
}

func (m *defaultRolemanager) RegisterRole(ctx context.Context, opts ...grpc.CallOption) (pb.Rolemanager_RegisterRoleClient, error) {
	client := pb.NewRolemanagerClient(m.cli.Conn())
	return client.RegisterRole(ctx, opts...)
}

func (m *defaultRolemanager) SetRole(ctx context.Context, opts ...grpc.CallOption) (pb.Rolemanager_SetRoleClient, error) {
	client := pb.NewRolemanagerClient(m.cli.Conn())
	return client.SetRole(ctx, opts...)
}

func (m *defaultRolemanager) GetRole(ctx context.Context, opts ...grpc.CallOption) (pb.Rolemanager_GetRoleClient, error) {
	client := pb.NewRolemanagerClient(m.cli.Conn())
	return client.GetRole(ctx, opts...)
}

func (m *defaultRolemanager) DeleteRole(ctx context.Context, opts ...grpc.CallOption) (pb.Rolemanager_DeleteRoleClient, error) {
	client := pb.NewRolemanagerClient(m.cli.Conn())
	return client.DeleteRole(ctx, opts...)
}
