// Code generated by goctl. DO NOT EDIT.
// Source: punishment.proto

package punishment

import (
	"context"

	"github.com/LINKHA/automatix/app/punishment/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ReportReq  = pb.ReportReq
	ReportResp = pb.ReportResp

	Punishment interface {
		Report(ctx context.Context, opts ...grpc.CallOption) (pb.Punishment_ReportClient, error)
	}

	defaultPunishment struct {
		cli zrpc.Client
	}
)

func NewPunishment(cli zrpc.Client) Punishment {
	return &defaultPunishment{
		cli: cli,
	}
}

func (m *defaultPunishment) Report(ctx context.Context, opts ...grpc.CallOption) (pb.Punishment_ReportClient, error) {
	client := pb.NewPunishmentClient(m.cli.Conn())
	return client.Report(ctx, opts...)
}
