// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.4
// source: servermanager.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// model
type Server struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId      string `protobuf:"bytes,1,opt,name=serverId,proto3" json:"serverId,omitempty"`
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ServerType    int64  `protobuf:"varint,3,opt,name=serverType,proto3" json:"serverType,omitempty"`
	Switch        int64  `protobuf:"varint,4,opt,name=switch,proto3" json:"switch,omitempty"`
	StartTime     int64  `protobuf:"varint,5,opt,name=startTime,proto3" json:"startTime,omitempty"`
	Area          int64  `protobuf:"varint,6,opt,name=area,proto3" json:"area,omitempty"`
	Tags          string `protobuf:"bytes,7,opt,name=tags,proto3" json:"tags,omitempty"`
	MaxOnline     int64  `protobuf:"varint,8,opt,name=maxOnline,proto3" json:"maxOnline,omitempty"`
	MaxQueue      int64  `protobuf:"varint,9,opt,name=maxQueue,proto3" json:"maxQueue,omitempty"`
	MaxSign       int64  `protobuf:"varint,10,opt,name=maxSign,proto3" json:"maxSign,omitempty"`
	TemplateValue string `protobuf:"bytes,11,opt,name=templateValue,proto3" json:"templateValue,omitempty"`
}

func (x *Server) Reset() {
	*x = Server{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servermanager_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server) ProtoMessage() {}

func (x *Server) ProtoReflect() protoreflect.Message {
	mi := &file_servermanager_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server.ProtoReflect.Descriptor instead.
func (*Server) Descriptor() ([]byte, []int) {
	return file_servermanager_proto_rawDescGZIP(), []int{0}
}

func (x *Server) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *Server) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Server) GetServerType() int64 {
	if x != nil {
		return x.ServerType
	}
	return 0
}

func (x *Server) GetSwitch() int64 {
	if x != nil {
		return x.Switch
	}
	return 0
}

func (x *Server) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *Server) GetArea() int64 {
	if x != nil {
		return x.Area
	}
	return 0
}

func (x *Server) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *Server) GetMaxOnline() int64 {
	if x != nil {
		return x.MaxOnline
	}
	return 0
}

func (x *Server) GetMaxQueue() int64 {
	if x != nil {
		return x.MaxQueue
	}
	return 0
}

func (x *Server) GetMaxSign() int64 {
	if x != nil {
		return x.MaxSign
	}
	return 0
}

func (x *Server) GetTemplateValue() string {
	if x != nil {
		return x.TemplateValue
	}
	return ""
}

// req „ÄÅresp
type GetServerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId string `protobuf:"bytes,1,opt,name=serverId,proto3" json:"serverId,omitempty"`
}

func (x *GetServerReq) Reset() {
	*x = GetServerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servermanager_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerReq) ProtoMessage() {}

func (x *GetServerReq) ProtoReflect() protoreflect.Message {
	mi := &file_servermanager_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerReq.ProtoReflect.Descriptor instead.
func (*GetServerReq) Descriptor() ([]byte, []int) {
	return file_servermanager_proto_rawDescGZIP(), []int{1}
}

func (x *GetServerReq) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

type GetServerResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnCode    int64  `protobuf:"varint,1,opt,name=returnCode,proto3" json:"returnCode,omitempty"`
	ServerId      string `protobuf:"bytes,2,opt,name=serverId,proto3" json:"serverId,omitempty"`
	Name          string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	ServerType    int64  `protobuf:"varint,4,opt,name=serverType,proto3" json:"serverType,omitempty"`
	Switch        int64  `protobuf:"varint,5,opt,name=switch,proto3" json:"switch,omitempty"`
	StartTime     int64  `protobuf:"varint,6,opt,name=startTime,proto3" json:"startTime,omitempty"`
	Area          int64  `protobuf:"varint,7,opt,name=area,proto3" json:"area,omitempty"`
	Tags          string `protobuf:"bytes,8,opt,name=tags,proto3" json:"tags,omitempty"`
	MaxOnline     int64  `protobuf:"varint,9,opt,name=maxOnline,proto3" json:"maxOnline,omitempty"`
	MaxQueue      int64  `protobuf:"varint,10,opt,name=maxQueue,proto3" json:"maxQueue,omitempty"`
	MaxSign       int64  `protobuf:"varint,11,opt,name=maxSign,proto3" json:"maxSign,omitempty"`
	TemplateValue string `protobuf:"bytes,12,opt,name=templateValue,proto3" json:"templateValue,omitempty"`
}

func (x *GetServerResp) Reset() {
	*x = GetServerResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servermanager_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerResp) ProtoMessage() {}

func (x *GetServerResp) ProtoReflect() protoreflect.Message {
	mi := &file_servermanager_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerResp.ProtoReflect.Descriptor instead.
func (*GetServerResp) Descriptor() ([]byte, []int) {
	return file_servermanager_proto_rawDescGZIP(), []int{2}
}

func (x *GetServerResp) GetReturnCode() int64 {
	if x != nil {
		return x.ReturnCode
	}
	return 0
}

func (x *GetServerResp) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *GetServerResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetServerResp) GetServerType() int64 {
	if x != nil {
		return x.ServerType
	}
	return 0
}

func (x *GetServerResp) GetSwitch() int64 {
	if x != nil {
		return x.Switch
	}
	return 0
}

func (x *GetServerResp) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GetServerResp) GetArea() int64 {
	if x != nil {
		return x.Area
	}
	return 0
}

func (x *GetServerResp) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *GetServerResp) GetMaxOnline() int64 {
	if x != nil {
		return x.MaxOnline
	}
	return 0
}

func (x *GetServerResp) GetMaxQueue() int64 {
	if x != nil {
		return x.MaxQueue
	}
	return 0
}

func (x *GetServerResp) GetMaxSign() int64 {
	if x != nil {
		return x.MaxSign
	}
	return 0
}

func (x *GetServerResp) GetTemplateValue() string {
	if x != nil {
		return x.TemplateValue
	}
	return ""
}

type SetServerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId      string `protobuf:"bytes,1,opt,name=serverId,proto3" json:"serverId,omitempty"`
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ServerType    int64  `protobuf:"varint,3,opt,name=serverType,proto3" json:"serverType,omitempty"`
	Switch        int64  `protobuf:"varint,4,opt,name=switch,proto3" json:"switch,omitempty"`
	StartTime     int64  `protobuf:"varint,5,opt,name=startTime,proto3" json:"startTime,omitempty"`
	Area          int64  `protobuf:"varint,6,opt,name=area,proto3" json:"area,omitempty"`
	Tags          string `protobuf:"bytes,7,opt,name=tags,proto3" json:"tags,omitempty"`
	MaxOnline     int64  `protobuf:"varint,8,opt,name=maxOnline,proto3" json:"maxOnline,omitempty"`
	MaxQueue      int64  `protobuf:"varint,9,opt,name=maxQueue,proto3" json:"maxQueue,omitempty"`
	MaxSign       int64  `protobuf:"varint,10,opt,name=maxSign,proto3" json:"maxSign,omitempty"`
	TemplateValue string `protobuf:"bytes,11,opt,name=templateValue,proto3" json:"templateValue,omitempty"`
}

func (x *SetServerReq) Reset() {
	*x = SetServerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servermanager_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetServerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetServerReq) ProtoMessage() {}

func (x *SetServerReq) ProtoReflect() protoreflect.Message {
	mi := &file_servermanager_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetServerReq.ProtoReflect.Descriptor instead.
func (*SetServerReq) Descriptor() ([]byte, []int) {
	return file_servermanager_proto_rawDescGZIP(), []int{3}
}

func (x *SetServerReq) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *SetServerReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SetServerReq) GetServerType() int64 {
	if x != nil {
		return x.ServerType
	}
	return 0
}

func (x *SetServerReq) GetSwitch() int64 {
	if x != nil {
		return x.Switch
	}
	return 0
}

func (x *SetServerReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *SetServerReq) GetArea() int64 {
	if x != nil {
		return x.Area
	}
	return 0
}

func (x *SetServerReq) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *SetServerReq) GetMaxOnline() int64 {
	if x != nil {
		return x.MaxOnline
	}
	return 0
}

func (x *SetServerReq) GetMaxQueue() int64 {
	if x != nil {
		return x.MaxQueue
	}
	return 0
}

func (x *SetServerReq) GetMaxSign() int64 {
	if x != nil {
		return x.MaxSign
	}
	return 0
}

func (x *SetServerReq) GetTemplateValue() string {
	if x != nil {
		return x.TemplateValue
	}
	return ""
}

type SetServerResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnCode int64 `protobuf:"varint,1,opt,name=returnCode,proto3" json:"returnCode,omitempty"`
}

func (x *SetServerResp) Reset() {
	*x = SetServerResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servermanager_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetServerResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetServerResp) ProtoMessage() {}

func (x *SetServerResp) ProtoReflect() protoreflect.Message {
	mi := &file_servermanager_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetServerResp.ProtoReflect.Descriptor instead.
func (*SetServerResp) Descriptor() ([]byte, []int) {
	return file_servermanager_proto_rawDescGZIP(), []int{4}
}

func (x *SetServerResp) GetReturnCode() int64 {
	if x != nil {
		return x.ReturnCode
	}
	return 0
}

type CreateServerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ServerType    int64  `protobuf:"varint,2,opt,name=serverType,proto3" json:"serverType,omitempty"`
	Switch        int64  `protobuf:"varint,3,opt,name=switch,proto3" json:"switch,omitempty"`
	StartTime     int64  `protobuf:"varint,4,opt,name=startTime,proto3" json:"startTime,omitempty"`
	Area          int64  `protobuf:"varint,5,opt,name=area,proto3" json:"area,omitempty"`
	Tags          string `protobuf:"bytes,6,opt,name=tags,proto3" json:"tags,omitempty"`
	MaxOnline     int64  `protobuf:"varint,7,opt,name=maxOnline,proto3" json:"maxOnline,omitempty"`
	MaxQueue      int64  `protobuf:"varint,8,opt,name=maxQueue,proto3" json:"maxQueue,omitempty"`
	MaxSign       int64  `protobuf:"varint,9,opt,name=maxSign,proto3" json:"maxSign,omitempty"`
	TemplateValue string `protobuf:"bytes,10,opt,name=templateValue,proto3" json:"templateValue,omitempty"`
}

func (x *CreateServerReq) Reset() {
	*x = CreateServerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servermanager_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateServerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateServerReq) ProtoMessage() {}

func (x *CreateServerReq) ProtoReflect() protoreflect.Message {
	mi := &file_servermanager_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateServerReq.ProtoReflect.Descriptor instead.
func (*CreateServerReq) Descriptor() ([]byte, []int) {
	return file_servermanager_proto_rawDescGZIP(), []int{5}
}

func (x *CreateServerReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateServerReq) GetServerType() int64 {
	if x != nil {
		return x.ServerType
	}
	return 0
}

func (x *CreateServerReq) GetSwitch() int64 {
	if x != nil {
		return x.Switch
	}
	return 0
}

func (x *CreateServerReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *CreateServerReq) GetArea() int64 {
	if x != nil {
		return x.Area
	}
	return 0
}

func (x *CreateServerReq) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *CreateServerReq) GetMaxOnline() int64 {
	if x != nil {
		return x.MaxOnline
	}
	return 0
}

func (x *CreateServerReq) GetMaxQueue() int64 {
	if x != nil {
		return x.MaxQueue
	}
	return 0
}

func (x *CreateServerReq) GetMaxSign() int64 {
	if x != nil {
		return x.MaxSign
	}
	return 0
}

func (x *CreateServerReq) GetTemplateValue() string {
	if x != nil {
		return x.TemplateValue
	}
	return ""
}

type CreateServerResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId   string `protobuf:"bytes,1,opt,name=serverId,proto3" json:"serverId,omitempty"`
	ReturnCode int64  `protobuf:"varint,2,opt,name=returnCode,proto3" json:"returnCode,omitempty"`
}

func (x *CreateServerResp) Reset() {
	*x = CreateServerResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servermanager_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateServerResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateServerResp) ProtoMessage() {}

func (x *CreateServerResp) ProtoReflect() protoreflect.Message {
	mi := &file_servermanager_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateServerResp.ProtoReflect.Descriptor instead.
func (*CreateServerResp) Descriptor() ([]byte, []int) {
	return file_servermanager_proto_rawDescGZIP(), []int{6}
}

func (x *CreateServerResp) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *CreateServerResp) GetReturnCode() int64 {
	if x != nil {
		return x.ReturnCode
	}
	return 0
}

type LoginServerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int64  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	ServerId string `protobuf:"bytes,2,opt,name=serverId,proto3" json:"serverId,omitempty"`
}

func (x *LoginServerReq) Reset() {
	*x = LoginServerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servermanager_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginServerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginServerReq) ProtoMessage() {}

func (x *LoginServerReq) ProtoReflect() protoreflect.Message {
	mi := &file_servermanager_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginServerReq.ProtoReflect.Descriptor instead.
func (*LoginServerReq) Descriptor() ([]byte, []int) {
	return file_servermanager_proto_rawDescGZIP(), []int{7}
}

func (x *LoginServerReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *LoginServerReq) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

type LoginServerResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerCode string `protobuf:"bytes,1,opt,name=serverCode,proto3" json:"serverCode,omitempty"`
	ReturnCode int64  `protobuf:"varint,2,opt,name=returnCode,proto3" json:"returnCode,omitempty"`
}

func (x *LoginServerResp) Reset() {
	*x = LoginServerResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servermanager_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginServerResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginServerResp) ProtoMessage() {}

func (x *LoginServerResp) ProtoReflect() protoreflect.Message {
	mi := &file_servermanager_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginServerResp.ProtoReflect.Descriptor instead.
func (*LoginServerResp) Descriptor() ([]byte, []int) {
	return file_servermanager_proto_rawDescGZIP(), []int{8}
}

func (x *LoginServerResp) GetServerCode() string {
	if x != nil {
		return x.ServerCode
	}
	return ""
}

func (x *LoginServerResp) GetReturnCode() int64 {
	if x != nil {
		return x.ReturnCode
	}
	return 0
}

type ServerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId      string `protobuf:"bytes,1,opt,name=serverId,proto3" json:"serverId,omitempty"`
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ServerType    int64  `protobuf:"varint,3,opt,name=serverType,proto3" json:"serverType,omitempty"`
	Switch        int64  `protobuf:"varint,4,opt,name=switch,proto3" json:"switch,omitempty"`
	StartTime     int64  `protobuf:"varint,5,opt,name=startTime,proto3" json:"startTime,omitempty"`
	Area          int64  `protobuf:"varint,6,opt,name=area,proto3" json:"area,omitempty"`
	Tags          string `protobuf:"bytes,7,opt,name=tags,proto3" json:"tags,omitempty"`
	MaxOnline     int64  `protobuf:"varint,8,opt,name=maxOnline,proto3" json:"maxOnline,omitempty"`
	MaxQueue      int64  `protobuf:"varint,9,opt,name=maxQueue,proto3" json:"maxQueue,omitempty"`
	MaxSign       int64  `protobuf:"varint,10,opt,name=maxSign,proto3" json:"maxSign,omitempty"`
	TemplateValue string `protobuf:"bytes,11,opt,name=templateValue,proto3" json:"templateValue,omitempty"`
}

func (x *ServerInfo) Reset() {
	*x = ServerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servermanager_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerInfo) ProtoMessage() {}

func (x *ServerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_servermanager_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerInfo.ProtoReflect.Descriptor instead.
func (*ServerInfo) Descriptor() ([]byte, []int) {
	return file_servermanager_proto_rawDescGZIP(), []int{9}
}

func (x *ServerInfo) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *ServerInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServerInfo) GetServerType() int64 {
	if x != nil {
		return x.ServerType
	}
	return 0
}

func (x *ServerInfo) GetSwitch() int64 {
	if x != nil {
		return x.Switch
	}
	return 0
}

func (x *ServerInfo) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ServerInfo) GetArea() int64 {
	if x != nil {
		return x.Area
	}
	return 0
}

func (x *ServerInfo) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *ServerInfo) GetMaxOnline() int64 {
	if x != nil {
		return x.MaxOnline
	}
	return 0
}

func (x *ServerInfo) GetMaxQueue() int64 {
	if x != nil {
		return x.MaxQueue
	}
	return 0
}

func (x *ServerInfo) GetMaxSign() int64 {
	if x != nil {
		return x.MaxSign
	}
	return 0
}

func (x *ServerInfo) GetTemplateValue() string {
	if x != nil {
		return x.TemplateValue
	}
	return ""
}

type GetServerListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetServerListReq) Reset() {
	*x = GetServerListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servermanager_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerListReq) ProtoMessage() {}

func (x *GetServerListReq) ProtoReflect() protoreflect.Message {
	mi := &file_servermanager_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerListReq.ProtoReflect.Descriptor instead.
func (*GetServerListReq) Descriptor() ([]byte, []int) {
	return file_servermanager_proto_rawDescGZIP(), []int{10}
}

type GetServerListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnCode int64         `protobuf:"varint,1,opt,name=returnCode,proto3" json:"returnCode,omitempty"`
	ServerList []*ServerInfo `protobuf:"bytes,2,rep,name=serverList,proto3" json:"serverList,omitempty"`
}

func (x *GetServerListResp) Reset() {
	*x = GetServerListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servermanager_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerListResp) ProtoMessage() {}

func (x *GetServerListResp) ProtoReflect() protoreflect.Message {
	mi := &file_servermanager_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerListResp.ProtoReflect.Descriptor instead.
func (*GetServerListResp) Descriptor() ([]byte, []int) {
	return file_servermanager_proto_rawDescGZIP(), []int{11}
}

func (x *GetServerListResp) GetReturnCode() int64 {
	if x != nil {
		return x.ReturnCode
	}
	return 0
}

func (x *GetServerListResp) GetServerList() []*ServerInfo {
	if x != nil {
		return x.ServerList
	}
	return nil
}

type GetServerCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int64  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	ServerId string `protobuf:"bytes,2,opt,name=serverId,proto3" json:"serverId,omitempty"`
}

func (x *GetServerCodeReq) Reset() {
	*x = GetServerCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servermanager_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerCodeReq) ProtoMessage() {}

func (x *GetServerCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_servermanager_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerCodeReq.ProtoReflect.Descriptor instead.
func (*GetServerCodeReq) Descriptor() ([]byte, []int) {
	return file_servermanager_proto_rawDescGZIP(), []int{12}
}

func (x *GetServerCodeReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetServerCodeReq) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

type GetServerCodeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerCode string `protobuf:"bytes,1,opt,name=serverCode,proto3" json:"serverCode,omitempty"`
	ReturnCode int64  `protobuf:"varint,2,opt,name=returnCode,proto3" json:"returnCode,omitempty"`
}

func (x *GetServerCodeResp) Reset() {
	*x = GetServerCodeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servermanager_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerCodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerCodeResp) ProtoMessage() {}

func (x *GetServerCodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_servermanager_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerCodeResp.ProtoReflect.Descriptor instead.
func (*GetServerCodeResp) Descriptor() ([]byte, []int) {
	return file_servermanager_proto_rawDescGZIP(), []int{13}
}

func (x *GetServerCodeResp) GetServerCode() string {
	if x != nil {
		return x.ServerCode
	}
	return ""
}

func (x *GetServerCodeResp) GetReturnCode() int64 {
	if x != nil {
		return x.ReturnCode
	}
	return 0
}

type EnterServerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerCode string `protobuf:"bytes,1,opt,name=serverCode,proto3" json:"serverCode,omitempty"`
}

func (x *EnterServerReq) Reset() {
	*x = EnterServerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servermanager_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnterServerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterServerReq) ProtoMessage() {}

func (x *EnterServerReq) ProtoReflect() protoreflect.Message {
	mi := &file_servermanager_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterServerReq.ProtoReflect.Descriptor instead.
func (*EnterServerReq) Descriptor() ([]byte, []int) {
	return file_servermanager_proto_rawDescGZIP(), []int{14}
}

func (x *EnterServerReq) GetServerCode() string {
	if x != nil {
		return x.ServerCode
	}
	return ""
}

type EnterServerResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnCode int64  `protobuf:"varint,1,opt,name=returnCode,proto3" json:"returnCode,omitempty"`
	Host       string `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Port       string `protobuf:"bytes,3,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *EnterServerResp) Reset() {
	*x = EnterServerResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servermanager_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnterServerResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterServerResp) ProtoMessage() {}

func (x *EnterServerResp) ProtoReflect() protoreflect.Message {
	mi := &file_servermanager_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterServerResp.ProtoReflect.Descriptor instead.
func (*EnterServerResp) Descriptor() ([]byte, []int) {
	return file_servermanager_proto_rawDescGZIP(), []int{15}
}

func (x *EnterServerResp) GetReturnCode() int64 {
	if x != nil {
		return x.ReturnCode
	}
	return 0
}

func (x *EnterServerResp) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *EnterServerResp) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

var File_servermanager_proto protoreflect.FileDescriptor

var file_servermanager_proto_rawDesc = []byte{
	0x0a, 0x13, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0xb0, 0x02, 0x0a, 0x06, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72,
	0x65, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x51, 0x75, 0x65, 0x75, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x61, 0x78, 0x53, 0x69, 0x67, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d,
	0x61, 0x78, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2a, 0x0a, 0x0c,
	0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0xd7, 0x02, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x61, 0x72, 0x65, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x4f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x78,
	0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x53, 0x69, 0x67, 0x6e, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x24, 0x0a, 0x0d,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0xb6, 0x02, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x65,
	0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x51, 0x75, 0x65, 0x75, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x61, 0x78, 0x53, 0x69, 0x67, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x61,
	0x78, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2f, 0x0a, 0x0d, 0x53,
	0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x0a,
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x9d, 0x02, 0x0a,
	0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72,
	0x65, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x51, 0x75, 0x65, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x61, 0x78, 0x53, 0x69, 0x67, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d,
	0x61, 0x78, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4e, 0x0a, 0x10,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x44, 0x0a, 0x0e,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x51, 0x0a, 0x0f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xb4, 0x02, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72,
	0x65, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x51, 0x75, 0x65, 0x75, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x61, 0x78, 0x53, 0x69, 0x67, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d,
	0x61, 0x78, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x12, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x22, 0x63, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x46, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0x53, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x22, 0x30, 0x0a, 0x0e, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x22, 0x59, 0x0a, 0x0f, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x32,
	0x9a, 0x03, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x12, 0x39, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x30, 0x0a, 0x09,
	0x73, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x53,
	0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62,
	0x2e, 0x53, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x30,
	0x0a, 0x09, 0x67, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x10, 0x2e, 0x70, 0x62,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x36, 0x0a, 0x0b, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12,
	0x12, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0d, 0x67, 0x65, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x15, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0d, 0x67, 0x65, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6e, 0x74,
	0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x42, 0x06, 0x5a, 0x04,
	0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_servermanager_proto_rawDescOnce sync.Once
	file_servermanager_proto_rawDescData = file_servermanager_proto_rawDesc
)

func file_servermanager_proto_rawDescGZIP() []byte {
	file_servermanager_proto_rawDescOnce.Do(func() {
		file_servermanager_proto_rawDescData = protoimpl.X.CompressGZIP(file_servermanager_proto_rawDescData)
	})
	return file_servermanager_proto_rawDescData
}

var file_servermanager_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_servermanager_proto_goTypes = []interface{}{
	(*Server)(nil),            // 0: pb.Server
	(*GetServerReq)(nil),      // 1: pb.GetServerReq
	(*GetServerResp)(nil),     // 2: pb.GetServerResp
	(*SetServerReq)(nil),      // 3: pb.SetServerReq
	(*SetServerResp)(nil),     // 4: pb.SetServerResp
	(*CreateServerReq)(nil),   // 5: pb.CreateServerReq
	(*CreateServerResp)(nil),  // 6: pb.CreateServerResp
	(*LoginServerReq)(nil),    // 7: pb.LoginServerReq
	(*LoginServerResp)(nil),   // 8: pb.LoginServerResp
	(*ServerInfo)(nil),        // 9: pb.ServerInfo
	(*GetServerListReq)(nil),  // 10: pb.GetServerListReq
	(*GetServerListResp)(nil), // 11: pb.GetServerListResp
	(*GetServerCodeReq)(nil),  // 12: pb.GetServerCodeReq
	(*GetServerCodeResp)(nil), // 13: pb.GetServerCodeResp
	(*EnterServerReq)(nil),    // 14: pb.EnterServerReq
	(*EnterServerResp)(nil),   // 15: pb.EnterServerResp
}
var file_servermanager_proto_depIdxs = []int32{
	9,  // 0: pb.GetServerListResp.serverList:type_name -> pb.ServerInfo
	5,  // 1: pb.servermanager.createServer:input_type -> pb.CreateServerReq
	3,  // 2: pb.servermanager.setServer:input_type -> pb.SetServerReq
	1,  // 3: pb.servermanager.getServer:input_type -> pb.GetServerReq
	7,  // 4: pb.servermanager.loginServer:input_type -> pb.LoginServerReq
	10, // 5: pb.servermanager.getServerList:input_type -> pb.GetServerListReq
	12, // 6: pb.servermanager.getServerCode:input_type -> pb.GetServerCodeReq
	14, // 7: pb.servermanager.enterServer:input_type -> pb.EnterServerReq
	6,  // 8: pb.servermanager.createServer:output_type -> pb.CreateServerResp
	4,  // 9: pb.servermanager.setServer:output_type -> pb.SetServerResp
	2,  // 10: pb.servermanager.getServer:output_type -> pb.GetServerResp
	8,  // 11: pb.servermanager.loginServer:output_type -> pb.LoginServerResp
	11, // 12: pb.servermanager.getServerList:output_type -> pb.GetServerListResp
	13, // 13: pb.servermanager.getServerCode:output_type -> pb.GetServerCodeResp
	15, // 14: pb.servermanager.enterServer:output_type -> pb.EnterServerResp
	8,  // [8:15] is the sub-list for method output_type
	1,  // [1:8] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_servermanager_proto_init() }
func file_servermanager_proto_init() {
	if File_servermanager_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_servermanager_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Server); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servermanager_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servermanager_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servermanager_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetServerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servermanager_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetServerResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servermanager_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateServerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servermanager_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateServerResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servermanager_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginServerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servermanager_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginServerResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servermanager_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servermanager_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servermanager_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servermanager_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servermanager_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerCodeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servermanager_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnterServerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servermanager_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnterServerResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_servermanager_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_servermanager_proto_goTypes,
		DependencyIndexes: file_servermanager_proto_depIdxs,
		MessageInfos:      file_servermanager_proto_msgTypes,
	}.Build()
	File_servermanager_proto = out.File
	file_servermanager_proto_rawDesc = nil
	file_servermanager_proto_goTypes = nil
	file_servermanager_proto_depIdxs = nil
}
