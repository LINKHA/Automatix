syntax = "proto3";

option go_package = "./pb";

import "proto/header.proto";

package pb;
//group
message CreateGroupReq {
    common.Header header = 1;
    string roleId = 2;
    string groupName = 3;
  	int64 maxPlayer = 4;
}
message CreateGroupResp {
    common.Header header = 1;
    int64 returnCode = 2;
    string groupId = 3;
}

message DeleteGroupReq {
    common.Header header = 1;
    string groupId = 2;
}
message DeleteGroupResp {
    common.Header header = 1;
    int64 returnCode = 2;
}

message GetGroupReq {
    common.Header header = 1;
    string groupId = 2;
}
message GetGroupResp {
    common.Header header = 1;
    int64 returnCode = 2;
    string groupId = 3;
    string groupName = 4;
  	int64 maxPlayer = 5;
    repeated string roleIds = 6;
}

message JoinGroupReq {
    common.Header header = 1;
    string groupId = 2;
    string roleId = 3;
}
message JoinGroupResp {
    common.Header header = 1;
    int64 returnCode = 2;
}

message LeaveGroupReq {
    common.Header header = 1;
    string groupId = 2;
    string roleId = 3;
}
message LeaveGroupResp {
    common.Header header = 1;
    int64 returnCode = 2;
}

//room
message CreateRoomReq {
    common.Header header = 1;
    string roomName = 2;
  	int64 maxPlayer = 3;
}
message CreateRoomResp {
    common.Header header = 1;
    int64 returnCode = 2;
    string roomId = 3;
}

message JoinRoomReq {
    common.Header header = 1;
    string roomId = 2;
    string roleId = 3;
}
message JoinRoomResp {
    common.Header header = 1;
    int64 returnCode = 2;
}

message LeaveRoomReq {
    common.Header header = 1;
    string roomId = 2;
    string roleId = 3;
}
message LeaveRoomResp {
    common.Header header = 1;
    int64 returnCode = 2;
}

message GetRoomReq {
    common.Header header = 1;
    string roomId = 2;
}
message GetRoomResp {
    common.Header header = 1;
    int64 returnCode = 2;
    string roomId = 3;
    string roomName = 4;
  	int64 maxPlayer = 5;
    repeated string roleIds = 6;
}


//match
message MatchRoomReq {
    common.Header header = 1;
  	string groupId = 2;
    string roomId = 3;
}
message MatchRoomResp {
    common.Header header = 1;
    int64 returnCode = 2;
}

message MatchFinishReq {
    common.Header header = 1;
}

message MatchFinishResp {
    common.Header header = 1;
    int64 returnCode = 2;
    string roomId = 3;
}

service roommanager {
    rpc createGroup(stream CreateGroupReq) returns (stream CreateGroupResp);
    rpc deleteGroup(stream DeleteGroupReq) returns (stream DeleteGroupResp);
    rpc getGroup(stream GetGroupReq) returns (stream GetGroupResp);
    rpc joinGroup(stream JoinGroupReq) returns (stream JoinGroupResp);
    rpc leaveGroup(stream LeaveGroupReq) returns (stream LeaveGroupResp);

    rpc createRoom(stream CreateRoomReq) returns (stream CreateRoomResp);
    rpc getRoom(stream GetRoomReq) returns (stream GetRoomResp);
    
    rpc matchRoom(stream MatchRoomReq) returns (stream MatchRoomResp);
    rpc matchFinish(stream MatchFinishReq) returns (stream MatchFinishResp);
}